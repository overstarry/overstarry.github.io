<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ai on Overstarry Site</title>
    <link>https://jasminides.com/tags/ai/</link>
    <description>Recent content in Ai on Overstarry Site</description>
    <image>
      <title>Overstarry Site</title>
      <url>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>zh</language>
    <copyright>Copyright © 2024 - overstarry · All rights reserved </copyright>
    <lastBuildDate>Mon, 28 Apr 2025 20:29:54 +0800</lastBuildDate>
    <atom:link href="https://jasminides.com/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dify 学习 - 安装和初探</title>
      <link>https://jasminides.com/posts/dify-learn-1/</link>
      <pubDate>Mon, 28 Apr 2025 20:29:54 +0800</pubDate>
      <guid>https://jasminides.com/posts/dify-learn-1/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;Dify 是一个开源的 LLM 应用开发平台。其直观的界面结合了 AI 工作流、RAG 管道、Agent、模型管理、可观测性功能等，让您可以快速从原型到生产。本篇将介绍如何安装和初步使用 Dify，接下来还会有多篇介绍 Dify 的文章，敬请期待。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;接下来介绍如何使用 Docker 安装 Dify。&lt;/p&gt;
&lt;h3 id=&#34;安装-docker&#34;&gt;安装 Docker&lt;/h3&gt;
&lt;p&gt;在各个操作系统上安装 Docker，可以参考 Docker 官方文档，这里就不进行叙述了。&lt;/p&gt;
&lt;h3 id=&#34;clone-dify-仓库&#34;&gt;Clone Dify 仓库&lt;/h3&gt;
&lt;p&gt;使用命令 &lt;code&gt;git clone https://github.com/langgenius/dify.git&lt;/code&gt; 克隆 Dify 仓库。&lt;/p&gt;
&lt;h3 id=&#34;启动-dify&#34;&gt;启动 Dify&lt;/h3&gt;
&lt;p&gt;进入 Docker 目录，拷贝一份环境变量配置文件,使用 &lt;code&gt;docker compose up -d&lt;/code&gt; 命令启动 Dify。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd dify/docker
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp .env.example .env
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;过一会儿，使用 &lt;code&gt;docker compose ps&lt;/code&gt; 命令查看容器状态，确保所有容器都正常运行。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/dify1/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;设置管理员账号&#34;&gt;设置管理员账号&lt;/h3&gt;
&lt;p&gt;访问 &lt;code&gt;http://localhost/install&lt;/code&gt; 设置管理员账号,设置完成之后，访问 &lt;code&gt;http://localhost/signin&lt;/code&gt; 即可登录。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/dify1/image-1.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 gpt 改造你的小米音箱</title>
      <link>https://jasminides.com/posts/mi_gpt/</link>
      <pubDate>Mon, 27 Jan 2025 14:19:32 +0800</pubDate>
      <guid>https://jasminides.com/posts/mi_gpt/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;前段时间看到了一个项目 &lt;code&gt;mi-gpt&lt;/code&gt; ,可以将你的小爱音箱接入 gpt，改造成专属于你的语音助手。&lt;/p&gt;
&lt;p&gt;接下来就由作者来介绍小爱同学从零接入 deepseek 的过程。&lt;/p&gt;
&lt;h2 id=&#34;设置环境变量和配置文件&#34;&gt;设置环境变量和配置文件&lt;/h2&gt;
&lt;p&gt;mi-gpt 有两种部署方式，一是使用 docker 部署，二是使用 Node.js 进行部署，本文使用 docker 进行部署使用。&lt;/p&gt;
&lt;p&gt;需要提供两个文件 .env 和 .migpt.js 文件，.migpt.js 是配置文件，包括一些配置，.env 是环境变量文件，存放 gpt 密钥相关文件。文件的例子可以从仓库里复制，然后进行相应的修改。&lt;/p&gt;
&lt;h2 id=&#34;启动&#34;&gt;启动&lt;/h2&gt;
&lt;p&gt;使用以下命令启动 docker:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d --env-file $(pwd)/.env -v $(pwd)/.migpt.js:/app/.migpt.js idootop/mi-gpt:latest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;windows 环境下需要将$(pwd) 替换为绝对路径。&lt;/p&gt;
&lt;p&gt;启动后可以通过 callAIKeywords 设置的关键字调用 ai 来响应用户的消息。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/mi-gpt/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;本文介绍了使用 mi-gpt 升级你的闲置的小爱音箱，通过简单的测试和使用，个人感觉还不够完善，稳定性不够好，感兴趣的读者可以根据本文的内容进行自行搭建尝试。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/idootop/mi-gpt&#34;&gt;https://github.com/idootop/mi-gpt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>V0.dev chat</title>
      <link>https://jasminides.com/posts/v0dev/</link>
      <pubDate>Sat, 24 Aug 2024 14:53:53 +0800</pubDate>
      <guid>https://jasminides.com/posts/v0dev/</guid>
      <description>&lt;h2 id=&#34;v0dev-chat-介绍&#34;&gt;v0.dev chat 介绍&lt;/h2&gt;
&lt;p&gt;v0.dev chat 是 vercel 推出的最新的生成式 AI 聊天机器人，可以通过用户对话的方式来生成相应的 react 代码。&lt;/p&gt;
&lt;p&gt;v0.dev chat 相比 V0.dev 有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最新的 react、next.js、web 技术知识&lt;/li&gt;
&lt;li&gt;可以运行 npm 包&lt;/li&gt;
&lt;li&gt;更快更可靠的流失传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来将通过官方的几个例子及个人尝试的效果来讲解。&lt;/p&gt;
&lt;h2 id=&#34;官方例子&#34;&gt;官方例子&lt;/h2&gt;
&lt;h3 id=&#34;解释-next-缓存机制&#34;&gt;解释 next 缓存机制&lt;/h3&gt;
&lt;p&gt;打开 &lt;a href=&#34;https://v0.dev/chat/E8fIPvg&#34;&gt;https://v0.dev/chat/E8fIPvg&lt;/a&gt;，可以看到 bot 很好的通过图表及文字讲述了 next 的缓存机制。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;贪吃蛇游戏&#34;&gt;贪吃蛇游戏&lt;/h3&gt;
&lt;p&gt;打开这个 &lt;a href=&#34;https://v0.dev/chat/AjJVzgx&#34;&gt;https://v0.dev/chat/AjJVzgx&lt;/a&gt;，可以看到用户上传蛇的皮肤并一步步引导 bot 生成贪吃蛇游戏。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image-1.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;个人尝试&#34;&gt;个人尝试&lt;/h2&gt;
&lt;p&gt;接下来将通过一个简单的视频网站例子来尝试 v0.dev chat 的效果。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先通过简单的提示生成视频网站的初始代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image-2.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可以看到 bot 生成的代码是非常完整的，并且可以运行预览的。接下来继续完善视频网站。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;接下来添加视频下载保存功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image-3.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;接下来添加视频网站首页功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image-4.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/v0dev/image-5.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;通过不断的调整，可以慢慢的形成一个视频网站的雏形。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;v0.dev chat 可以很好的通过对话的方式来生成 react 代码，并且可以运行 npm 包，可以很好的帮助我们快速生成代码。本文通过构建一个视频网站的例子来尝试 v0.dev，由于免费版限制了 message 的数量，感兴趣的可以自行尝试。视频网站的生成步骤可以通过此链接查看：https://v0.dev/chat/PsqNuwjpzXx&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 编程助手 - Cody</title>
      <link>https://jasminides.com/posts/cody/</link>
      <pubDate>Wed, 03 Jul 2024 20:03:00 +0800</pubDate>
      <guid>https://jasminides.com/posts/cody/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;cody 是一个 AI 编程助手，可以帮助你更快更好的理解代码，编写代码，解决代码中的问题。通过本地代码仓库和远程代码库提取上下文，让你能够更好的理解和编写代码。Cody 目前可以在以下编程工具中使用:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;VS Code&lt;/li&gt;
&lt;li&gt;JetBrains IDE&lt;/li&gt;
&lt;li&gt;Neovim (实验性)&lt;/li&gt;
&lt;li&gt;Web (实验性)&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;Cody 主要有以下功能:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;自动完成 基于代码上下文的自动补全&lt;/li&gt;
&lt;li&gt;聊天 在聊天视图中询问代码相关的问题&lt;/li&gt;
&lt;li&gt;命令 为常见的操作提供了快捷命令，例如：生成文档，添加测试，检测代码问题&lt;/li&gt;
&lt;li&gt;调试 在编辑器中调试代码，帮你寻找代码中的问题&lt;/li&gt;
&lt;li&gt;忽略 可以过滤某些文件及过滤某些仓库&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;价格&#34;&gt;价格&lt;/h2&gt;
&lt;p&gt;介绍完 Cody 的特点后，接下来介绍大家关心的价格问题，Cody 有 3 个版本，分别是 Free、Pro、Enterprise.&lt;/p&gt;
&lt;p&gt;Free 版本为免费版，目前每月提供 20 次聊天次数、500 次代码自动完成，今天查看 sourcegraph 的 blog，发现 Free 版本的额度提高了，代码自动完成次数为无限次，聊天和命令次数增加了 10 倍为 200 次。&lt;/p&gt;
&lt;p&gt;Pro 版本为每个月 9 美元，提供了不限次数的代码补全及聊天功能及提供了 GPT-4o 等高级 LLM.&lt;/p&gt;
&lt;p&gt;Enterprise 的价格需要联系 sourcegraph 的销售人员，Enterprise 相较于 Pro 版提供了更多的团队功能。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;接下来介绍如何安装 Cody，主要介绍 VS Code 中如何安装：&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 检测文件类型 Magika</title>
      <link>https://jasminides.com/posts/magika/</link>
      <pubDate>Sat, 15 Jun 2024 13:59:48 +0800</pubDate>
      <guid>https://jasminides.com/posts/magika/</guid>
      <description>&lt;h2 id=&#34;magika-介绍&#34;&gt;magika 介绍&lt;/h2&gt;
&lt;p&gt;Magika 是 Google 推出的一个新型工具，使用 AI 用来文件类型的检测，采用了高度优化的 Keras  模型，具有较高的准确性、模型较小等优点，支持&lt;a href=&#34;https://github.com/google/magika/blob/main/docs/supported_content_types_list.md&#34;&gt;100&lt;/a&gt;多种文件类型，准确性高达 99%,推测每个文件的时间大约 5 ms。&lt;/p&gt;
&lt;p&gt;Magika 在 Google 内部已被大量使用，用于 Gmail，网络硬盘等应用，检测各种文件，提高了用户的安全性。&lt;/p&gt;
&lt;p&gt;Magika 提供了 Pyhton 命令行、Pyhton API 和 js 包等多种方式使用，还支持批量处理提高推理速度。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;可以使用 pip 命令进行安装：&lt;code&gt;pip install magika&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果没有 Python 环境，还可以 Docker 中进行使用：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/google/magika
cd magika/
docker build -t magika .
docker run -it --rm -v $(pwd):/magika magika -r /magika/tests_data
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果 Docker 环境也没有，那你可以使用 Google 部署的网站进行试用 &lt;a href=&#34;https://google.github.io/magika/&#34;&gt;https://google.github.io/magika/&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;运行&#34;&gt;运行&lt;/h2&gt;
&lt;p&gt;运行仓库提供的测试数据 (&lt;code&gt;magika -r /magika/tests_data&lt;/code&gt;):
&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/magika/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可以看到文件的类型很精准的被识别出来了。&lt;/p&gt;
&lt;p&gt;接下来做个试验，将一个 png 的图片的后缀修改为 jpg ,看看还能否正确识别，可以看到还是成功精准识别了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 绘画初体验</title>
      <link>https://jasminides.com/posts/ai%E7%BB%98%E7%94%BB%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sat, 15 Oct 2022 22:19:32 +0800</pubDate>
      <guid>https://jasminides.com/posts/ai%E7%BB%98%E7%94%BB%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近我发现各个群里出现了一股利用 AI 进行绘画的潮流，今天我也尝试使用 Stable Diffusion 模型 进行 AI 绘画。&lt;/p&gt;
&lt;h2 id=&#34;stable-diffusion-简介&#34;&gt;Stable Diffusion 简介&lt;/h2&gt;
&lt;p&gt;Stable Diffusion 是一个文本到图像的模型，将使人们可以在几秒钟内创造出令人惊叹的艺术作品。它在速度和质量方面都有突破，这意味着它可以在消费级 GPU 上运行&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;
&lt;p&gt;我们采用别人封装的 stable-diffusion-webui 平台进行绘画，由于各种条件限制，我们使用 github 上提供的 Google colab notbook 进行部署 (&lt;a href=&#34;https://colab.research.google.com/drive/1IplUv47g9CgtlJmFnyT2sDyNYDEeMJDi?usp=sharing)&#34;&gt;https://colab.research.google.com/drive/1IplUv47g9CgtlJmFnyT2sDyNYDEeMJDi?usp=sharing)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;打开链接，我简单的看了下代码，前面是基础的安装运行环境、需要的 Python package .我们依次运行即可。&lt;/p&gt;
&lt;p&gt;我们直接来到 1.4 Connect to Google Drive，
&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/ai%e7%bb%98%e7%94%bb/img.png&#34; alt=&#34;img.png&#34;  /&gt;

勾选 download_if_missing，然后到  &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;https://huggingface.co/settings/tokens&lt;/a&gt;  复制你的 toekn 并填入。(huggingface 注册耗费了许多时间，reCAPTCHA 没有通过).&lt;/p&gt;
&lt;p&gt;点击运行后就开始拉取模型。&lt;/p&gt;
&lt;p&gt;如果运行发现报错了：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;remote: Access to model CompVis/stable-diffusion-v-1-4-original is restricted and you are not in the authorized list. Visit https://huggingface.co/CompVis/stable-diffusion-v-1-4-original to ask for access.
fatal: unable to access &amp;#39;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/&amp;#39;: The requested URL returned error: 403
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你需要到 &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&#34;&gt;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&lt;/a&gt; 授权模型的访问权限。授权后重新运行即可。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
