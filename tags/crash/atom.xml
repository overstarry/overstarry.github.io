<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Overstarry Site - Crash</title>
    <subtitle>overstarry site</subtitle>
    <link rel="self" type="application/atom+xml" href="https://jasminides.com/tags/crash/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://jasminides.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-01-06T14:46:21+08:00</updated>
    <id>https://jasminides.com/tags/crash/atom.xml</id>
    <entry xml:lang="en">
        <title>如何收集系统宕机后的内存转储信息</title>
        <published>2024-01-06T14:46:21+08:00</published>
        <updated>2024-01-06T14:46:21+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/ru-he-shou-ji-xi-tong-dang-ji-hou-de-nei-cun-zhuan-chu-xin-xi/"/>
        <id>https://jasminides.com/posts/ru-he-shou-ji-xi-tong-dang-ji-hou-de-nei-cun-zhuan-chu-xin-xi/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/ru-he-shou-ji-xi-tong-dang-ji-hou-de-nei-cun-zhuan-chu-xin-xi/">&lt;h2 id=&quot;qian-yan&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#qian-yan&quot; aria-label=&quot;Anchor link for: qian-yan&quot;&gt;#&lt;&#x2F;a&gt;前言&lt;&#x2F;h2&gt;
&lt;p&gt;最近出现了多次因为各种原因导致的操作系统宕机的问题，为了查找系统宕机的原因，需要收集系统宕机后的内存转储信息。本文就介绍几种常见的方式。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-li-yun-nei-zhi-ming-ling-shou-ji&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-li-yun-nei-zhi-ming-ling-shou-ji&quot; aria-label=&quot;Anchor link for: a-li-yun-nei-zhi-ming-ling-shou-ji&quot;&gt;#&lt;&#x2F;a&gt;阿里云内置命令收集&lt;&#x2F;h2&gt;
&lt;p&gt;由于主要使用的是阿里云的服务器，就先介绍阿里云收集系统宕机内存转储信息的方式。&lt;&#x2F;p&gt;
&lt;p&gt;阿里云系统默认没有开启 dump 配置，我们需要使用以下命令开启:&lt;code&gt;acs-plugin-manager --exec --plugin=ecs_dump_collector --params=&quot;--enable&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img.png&quot; alt=&quot;img.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;那我们如何收集内存转储信息呢，执行以下命令:&lt;code&gt;acs-plugin-manager --exec --plugin=ecs_dump_collector --params=&quot;-c&quot;&lt;&#x2F;code&gt; 出现以下信息表示收集成功。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img_1.png&quot; alt=&quot;img_1.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img_2.png&quot; alt=&quot;img_2.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;有了转储信息文件我们就可以将文件交给专业的运维人员或阿里云工程师进行宕机原因分析。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong-crash-kdump&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#shi-yong-crash-kdump&quot; aria-label=&quot;Anchor link for: shi-yong-crash-kdump&quot;&gt;#&lt;&#x2F;a&gt;使用 Crash + Kdump&lt;&#x2F;h2&gt;
&lt;p&gt;如果我们没有使用阿里云的服务该如何收集系统崩溃的转储信息呢，我们可以使用 Crash + Kdump 进行收集，通过前面的使用可以看出阿里云的插件就是使用了这两个工具，接下来开始进行简单的介绍。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-zhuang&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#an-zhuang&quot; aria-label=&quot;Anchor link for: an-zhuang&quot;&gt;#&lt;&#x2F;a&gt;安装&lt;&#x2F;h3&gt;
&lt;p&gt;需要先安装 Crash + Kdump，使用此命令进行安装:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ sudo apt install linux-crashdump
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ sudo apt install crash
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;安装完为了使服务生效需要重启服务器。&lt;&#x2F;p&gt;
&lt;p&gt;使用以下命令:&lt;code&gt;sudo cat &#x2F;etc&#x2F;default&#x2F;grub.d&#x2F;kdump-tools.cfg&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img_3.png&quot; alt=&quot;img_3.png&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img_4.png&quot; alt=&quot;img_4.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;可以看出系统保留了 192M RAM 内存区供转储捕获内核使用&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shou-ji&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#shou-ji&quot; aria-label=&quot;Anchor link for: shou-ji&quot;&gt;#&lt;&#x2F;a&gt;收集&lt;&#x2F;h3&gt;
&lt;p&gt;为了测试方便我们可以使用此命令快速触发崩溃: &lt;code&gt;sudo echo c &amp;gt; &#x2F;proc&#x2F;sysrq-trigger&lt;&#x2F;code&gt; 。命令执行后在 &#x2F;var&#x2F;crash 目录会生成以当前时间为名称的目录，目录里面就是收集到的转储信息。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;crash&#x2F;img_5.png&quot; alt=&quot;img_5.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;demsg.x 为崩溃时候的系统内核日志，dump.x 文件则为转储的内核快照文件。为了更好的查找问题，我们还需要安装 vmlinux，使用以下命令安装:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;echo &amp;quot;deb http:&#x2F;&#x2F;ddebs.ubuntu.com $(lsb_release -cs) main restricted universe multiverse
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; deb http:&#x2F;&#x2F;ddebs.ubuntu.com $(lsb_release -cs)-updates main restricted universe multiverse
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; deb http:&#x2F;&#x2F;ddebs.ubuntu.com $(lsb_release -cs)-proposed main restricted universe multiverse&amp;quot; | sudo tee -a &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ddebs.list
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; sudo apt install ubuntu-dbgsym-keyring
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo apt-get update
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo apt -y install linux-image-$(uname -r)-dbgsym
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;安装完我们就可以对刚刚收集到的转储文件进行分析了，使用命令:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo crash &#x2F;usr&#x2F;lib&#x2F;debug&#x2F;boot&#x2F;vmlinux-5.4.0-166-generic &#x2F;var&#x2F;crash&#x2F;202401061626&#x2F;dump.202401061626 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输出:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;console&quot; class=&quot;language-console z-code&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;crash 7.2.8
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2002-2020  Red Hat, Inc.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2004, 2005, 2006, 2010  IBM Corporation
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 1999-2006  Hewlett-Packard Co
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2005, 2006, 2011, 2012  Fujitsu Limited
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2006, 2007  VA Linux Systems Japan K.K.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2005, 2011  NEC Corporation
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 1999, 2002, 2007  Silicon Graphics, Inc.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 1999, 2000, 2001, 2002  Mission Critical Linux, Inc.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This program is free software, covered by the GNU General Public License,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;and you are welcome to change it and&#x2F;or distribute copies of it under
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;certain conditions.  Enter &amp;quot;help copying&amp;quot; to see the conditions.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This program has absolutely no warranty.  Enter &amp;quot;help warranty&amp;quot; for details.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;GNU gdb (GDB) 7.6
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Copyright (C) 2013 Free Software Foundation, Inc.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;License GPLv3+: GNU GPL version 3 or later &amp;lt;http:&#x2F;&#x2F;gnu.org&#x2F;licenses&#x2F;gpl.html&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This is free software: you are free to change and redistribute it.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;There is NO WARRANTY, to the extent permitted by law.  Type &amp;quot;show copying&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;and &amp;quot;show warranty&amp;quot; for details.
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;This GDB was configured as &amp;quot;x86_64-unknown-linux-gnu&amp;quot;...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;WARNING: kernel relocated [300MB]: patching 115314 gdb minimal_symbol values
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      KERNEL: &#x2F;usr&#x2F;lib&#x2F;debug&#x2F;boot&#x2F;vmlinux-5.4.0-166-generic            
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    DUMPFILE: &#x2F;var&#x2F;crash&#x2F;202401061626&#x2F;dump.202401061626  [PARTIAL DUMP]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        CPUS: 2
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        date = Sat Jan  6 16:26:23 2024
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      UPTIME: 00:06:35
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LOAD AVERAGE: 0.00, 0.02, 0.02
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;       TASKS: 148
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    NODENAME: iZ7xv1a0t15muqy1e2co1uZ
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;     RELEASE: 5.4.0-166-generic
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;     VERSION: #183-Ubuntu SMP Mon Oct 2 11:28:33 UTC 2023
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;     MACHINE: x86_64  (2699 Mhz)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;      MEMORY: 3.9 GB
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;       PANIC: &amp;quot;Kernel panic - not syncing: sysrq triggered crash&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;         PID: 3654
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;     COMMAND: &amp;quot;echo&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;        TASK: ffff8c4a696d8000  [THREAD_INFO: ffff8c4a696d8000]
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;         CPU: 0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;       STATE: TASK_RUNNING (PANIC)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用bt命令查看崩溃时的调用栈:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;console&quot; class=&quot;language-console z-code&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;crash&amp;gt; bt
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;PID: 3654   TASK: ffff8c4a696d8000  CPU: 0   COMMAND: &amp;quot;echo&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #0 [ffffabde00513c68] machine_kexec at ffffffff93c6d063
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #1 [ffffabde00513cc8] __crash_kexec at ffffffff93d4de32
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #2 [ffffabde00513d98] panic at ffffffff946a69a8
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #3 [ffffabde00513e18] sysrq_handle_crash at ffffffff94288205
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #4 [ffffabde00513e28] __handle_sysrq.cold at ffffffff946ce885
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #5 [ffffabde00513e60] write_sysrq_trigger at ffffffff94288a38
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #6 [ffffabde00513e78] proc_reg_write at ffffffff93f69113
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #7 [ffffabde00513e98] __vfs_write at ffffffff93ed1b6b
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #8 [ffffabde00513ea8] vfs_write at ffffffff93ed2879
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; #9 [ffffabde00513ee0] ksys_write at ffffffff93ed4e07
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#10 [ffffabde00513f20] __x64_sys_write at ffffffff93ed4e9a
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#11 [ffffabde00513f30] do_syscall_64 at ffffffff93c04fe7
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#12 [ffffabde00513f50] entry_SYSCALL_64_after_hwframe at ffffffff948000a4
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    RIP: 00007ff833b41077  RSP: 00007ffeadb56b78  RFLAGS: 00000246
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    RAX: ffffffffffffffda  RBX: 0000000000000002  RCX: 00007ff833b41077
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    RDX: 0000000000000002  RSI: 000055b3e2648440  RDI: 0000000000000001
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    RBP: 000055b3e2648440   R8: 0000000000000000   R9: 0000000000000001
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    R10: 00007ff833c1c640  R11: 0000000000000246  R12: 0000000000000002
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    R13: 00007ff833c206a0  R14: 00007ff833c1c4a0  R15: 00007ff833c1b8a0
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;    ORIG_RAX: 0000000000000001  CS: 0033  SS: 002b
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;crash 还有很多用法，感兴趣的读者可以自行研究学习。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;#&lt;&#x2F;a&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;help.aliyun.com&#x2F;zh&#x2F;ecs&#x2F;user-guide&#x2F;collect-kdump-information-after-an-instance-experiences-an-operating-system-failure?spm=5176.smartservice_service_robot_chat_new.0.0.aedc3f1bqtn8Zi&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;crash-utility.github.io&#x2F;crash_whitepaper.html#WHY_CRASH&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
