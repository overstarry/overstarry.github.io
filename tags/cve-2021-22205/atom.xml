<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Overstarry Site - CVE-2021-22205</title>
    <subtitle>overstarry site</subtitle>
    <link rel="self" type="application/atom+xml" href="https://jasminides.com/tags/cve-2021-22205/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://jasminides.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2022-09-10T22:06:22+08:00</updated>
    <id>https://jasminides.com/tags/cve-2021-22205/atom.xml</id>
    <entry xml:lang="en">
        <title>Gitlab CVE-2021-22205</title>
        <published>2022-09-10T22:06:22+08:00</published>
        <updated>2022-09-10T22:06:22+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/gitlab-cve-2021-22205/"/>
        <id>https://jasminides.com/posts/gitlab-cve-2021-22205/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/gitlab-cve-2021-22205/">&lt;h2 id=&quot;qi-yin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-yin&quot; aria-label=&quot;Anchor link for: qi-yin&quot;&gt;#&lt;&#x2F;a&gt;起因&lt;&#x2F;h2&gt;
&lt;p&gt;最近一台服务器出现服务器资源 cpu、内存过高的情况，通过对进程的分析，发现是 gitlab 容器进程，怀疑是 gitlab 被入侵运行了挖矿病毒，通过对 gitlab 日志的分析，可以得出入侵者是利用了 gitlab 的 CVE-2021-22205 的漏洞，对 gitlab 进行了攻击。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cve-2021-22205-jie-shao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#cve-2021-22205-jie-shao&quot; aria-label=&quot;Anchor link for: cve-2021-22205-jie-shao&quot;&gt;#&lt;&#x2F;a&gt;CVE-2021-22205 介绍&lt;&#x2F;h2&gt;
&lt;p&gt;CVE-2021-22205是一个严重的严重性漏洞(CVSS 10.0)，它是由第三方文件解析器Exif-Tool对图像文件进行不当验证的结果，导致远程命令执行漏洞，可能导致您的GitLab实例被攻击。&lt;&#x2F;p&gt;
&lt;p&gt;以下版本受到漏洞影响:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;11.9.x - 13.8.7&lt;&#x2F;li&gt;
&lt;li&gt;13.9.0 - 13.9.5&lt;&#x2F;li&gt;
&lt;li&gt;13.10.0 - 13.10.2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;jie-jue&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jie-jue&quot; aria-label=&quot;Anchor link for: jie-jue&quot;&gt;#&lt;&#x2F;a&gt;解决&lt;&#x2F;h2&gt;
&lt;p&gt;gitlab 发布了 GitLab 13.10.3、13.9.6 和 13.8.8 版本来解决这个漏洞。请尽快升级。&lt;&#x2F;p&gt;
&lt;p&gt;如果无法即使更新和使用热更新补丁解决，可以通过将exiftool脚本替换为cat -。这个解决方案将防止从上传的图像中剥离所有的exif数据。&lt;&#x2F;p&gt;
&lt;p&gt;将  &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;bin&#x2F;exiftool 脚本内容替换为&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; class=&quot;language-shell z-code&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;cat -
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这种方法不是长久之计，每次重启容器时都要手动修改文件，还是尽快更新版本。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yuan-yin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#yuan-yin&quot; aria-label=&quot;Anchor link for: yuan-yin&quot;&gt;#&lt;&#x2F;a&gt;原因&lt;&#x2F;h2&gt;
&lt;p&gt;根据gitlab的官方漏洞issues来看，当访问接口&#x2F;uploads&#x2F;user上传图像文件时，GitLab Workhorse会将扩展名为jpg、jpeg、tiff文件传递给ExifTool。用于删除其中不合法的标签。具体的标签在workhorse&#x2F;internal&#x2F;upload&#x2F;exif&#x2F;exif.go中的startProcessing方法中有定义，为白名单处理。&lt;&#x2F;p&gt;
&lt;p&gt;而ExifTool在解析文件的时候会忽略文件的扩展名，尝试根据文件的内容来确定文件类型，其中支持的类型有DjVu。&lt;&#x2F;p&gt;
&lt;p&gt;关键在于ExifTool在解析DjVu注释的ParseAnt函数中存在漏洞，所以我们就可以通过构造DjVu文件并插入恶意注释内容将其改为jpg后缀上传，因为gitlab并未在这个过程中验证文件内容是否是允许的格式，最后让ExifTool以DjVu形式来解析文件，造成了ExifTool代码执行漏洞。&lt;&#x2F;p&gt;
&lt;p&gt;该漏洞存在于ExifTool的7.44版本以上，在12.4版本中修复。Gitlab v13.10.2使用的ExifTool版本为11.70。并且接口&#x2F;uploads&#x2F;user可通过获取的X-CSRF-Token和未登录Session后来进行未授权访问。最终造成了GitLab未授权的远程代码执行漏洞。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-ta&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-ta&quot; aria-label=&quot;Anchor link for: qi-ta&quot;&gt;#&lt;&#x2F;a&gt;其它&lt;&#x2F;h2&gt;
&lt;p&gt;gitlab 提供了对 gitlab 安全的一些最佳实践: https:&#x2F;&#x2F;about.gitlab.com&#x2F;blog&#x2F;2020&#x2F;05&#x2F;20&#x2F;gitlab-instance-security-best-practices&#x2F;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;#&lt;&#x2F;a&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;hackerone.com&#x2F;reports&#x2F;1154542&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.anquanke.com&#x2F;post&#x2F;id&#x2F;266606&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s?__biz=Mzg3MDAzMDQxNw==&amp;amp;mid=2247491418&amp;amp;idx=1&amp;amp;sn=853be1256de894c3c579a07738c11590&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;about.gitlab.com&#x2F;blog&#x2F;2021&#x2F;11&#x2F;04&#x2F;action-needed-in-response-to-cve2021-22205&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;forum.gitlab.com&#x2F;t&#x2F;cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted&#x2F;60918?_gl=1&lt;em&gt;1y48o1u&lt;&#x2F;em&gt;_ga&lt;em&gt;ODE5OTE4NTMuMTY2MjgxODQ3OQ..&lt;&#x2F;em&gt;_ga_ENFH3X7M5Y*MTY2MjgxODQ5MC4xLjAuMTY2MjgxOTE4Ny4wLjAuMA..&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;forum.gitlab.com&#x2F;t&#x2F;cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted&#x2F;60918&#x2F;2?_gl=1&lt;em&gt;1y48o1u&lt;&#x2F;em&gt;_ga&lt;em&gt;ODE5OTE4NTMuMTY2MjgxODQ3OQ..&lt;&#x2F;em&gt;_ga_ENFH3X7M5Y*MTY2MjgxODQ5MC4xLjAuMTY2MjgxOTE4Ny4wLjAuMA..&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;about.gitlab.com&#x2F;releases&#x2F;2021&#x2F;04&#x2F;14&#x2F;security-release-gitlab-13-10-3-released&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;hackerone.com&#x2F;vakzz?type=user&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2021-22205&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
