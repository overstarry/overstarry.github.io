<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CVE-2021-22205 on Overstarry Site</title>
    <link>https://jasminides.com/tags/cve-2021-22205/</link>
    <description>Recent content in CVE-2021-22205 on Overstarry Site</description>
    <image>
      <title>Overstarry Site</title>
      <url>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>zh</language>
    <copyright>Copyright © 2024 - overstarry · All rights reserved </copyright>
    <lastBuildDate>Sat, 10 Sep 2022 22:06:22 +0800</lastBuildDate>
    <atom:link href="https://jasminides.com/tags/cve-2021-22205/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gitlab CVE-2021-22205</title>
      <link>https://jasminides.com/posts/gitlab_cve-2021-22205/</link>
      <pubDate>Sat, 10 Sep 2022 22:06:22 +0800</pubDate>
      <guid>https://jasminides.com/posts/gitlab_cve-2021-22205/</guid>
      <description>&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;最近一台服务器出现服务器资源 cpu、内存过高的情况，通过对进程的分析，发现是 gitlab 容器进程，怀疑是 gitlab 被入侵运行了挖矿病毒，通过对 gitlab 日志的分析，可以得出入侵者是利用了 gitlab 的 CVE-2021-22205 的漏洞，对 gitlab 进行了攻击。&lt;/p&gt;
&lt;h2 id=&#34;cve-2021-22205-介绍&#34;&gt;CVE-2021-22205 介绍&lt;/h2&gt;
&lt;p&gt;CVE-2021-22205是一个严重的严重性漏洞(CVSS 10.0)，它是由第三方文件解析器Exif-Tool对图像文件进行不当验证的结果，导致远程命令执行漏洞，可能导致您的GitLab实例被攻击。&lt;/p&gt;
&lt;p&gt;以下版本受到漏洞影响:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;11.9.x - 13.8.7&lt;/li&gt;
&lt;li&gt;13.9.0 - 13.9.5&lt;/li&gt;
&lt;li&gt;13.10.0 - 13.10.2&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;解决&#34;&gt;解决&lt;/h2&gt;
&lt;p&gt;gitlab 发布了 GitLab 13.10.3、13.9.6 和 13.8.8 版本来解决这个漏洞。请尽快升级。&lt;/p&gt;
&lt;p&gt;如果无法即使更新和使用热更新补丁解决，可以通过将exiftool脚本替换为cat -。这个解决方案将防止从上传的图像中剥离所有的exif数据。&lt;/p&gt;
&lt;p&gt;将  /opt/gitlab/embedded/bin/exiftool 脚本内容替换为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种方法不是长久之计，每次重启容器时都要手动修改文件，还是尽快更新版本。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;根据gitlab的官方漏洞issues来看，当访问接口/uploads/user上传图像文件时，GitLab Workhorse会将扩展名为jpg、jpeg、tiff文件传递给ExifTool。用于删除其中不合法的标签。具体的标签在workhorse/internal/upload/exif/exif.go中的startProcessing方法中有定义，为白名单处理。&lt;/p&gt;
&lt;p&gt;而ExifTool在解析文件的时候会忽略文件的扩展名，尝试根据文件的内容来确定文件类型，其中支持的类型有DjVu。&lt;/p&gt;
&lt;p&gt;关键在于ExifTool在解析DjVu注释的ParseAnt函数中存在漏洞，所以我们就可以通过构造DjVu文件并插入恶意注释内容将其改为jpg后缀上传，因为gitlab并未在这个过程中验证文件内容是否是允许的格式，最后让ExifTool以DjVu形式来解析文件，造成了ExifTool代码执行漏洞。&lt;/p&gt;
&lt;p&gt;该漏洞存在于ExifTool的7.44版本以上，在12.4版本中修复。Gitlab v13.10.2使用的ExifTool版本为11.70。并且接口/uploads/user可通过获取的X-CSRF-Token和未登录Session后来进行未授权访问。最终造成了GitLab未授权的远程代码执行漏洞。&lt;/p&gt;
&lt;h2 id=&#34;其它&#34;&gt;其它&lt;/h2&gt;
&lt;p&gt;gitlab 提供了对 gitlab 安全的一些最佳实践: &lt;a href=&#34;https://about.gitlab.com/blog/2020/05/20/gitlab-instance-security-best-practices/&#34;&gt;https://about.gitlab.com/blog/2020/05/20/gitlab-instance-security-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hackerone.com/reports/1154542&#34;&gt;https://hackerone.com/reports/1154542&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/266606&#34;&gt;https://www.anquanke.com/post/id/266606&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzg3MDAzMDQxNw==&amp;amp;mid=2247491418&amp;amp;idx=1&amp;amp;sn=853be1256de894c3c579a07738c11590&#34;&gt;https://mp.weixin.qq.com/s?__biz=Mzg3MDAzMDQxNw==&amp;amp;mid=2247491418&amp;amp;idx=1&amp;amp;sn=853be1256de894c3c579a07738c11590&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/blog/2021/11/04/action-needed-in-response-to-cve2021-22205/&#34;&gt;https://about.gitlab.com/blog/2021/11/04/action-needed-in-response-to-cve2021-22205/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.gitlab.com/t/cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted/60918?_gl=1&#34;&gt;https://forum.gitlab.com/t/cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted/60918?_gl=1&lt;/a&gt;&lt;em&gt;1y48o1u&lt;/em&gt;_ga&lt;em&gt;ODE5OTE4NTMuMTY2MjgxODQ3OQ..&lt;/em&gt;_ga_ENFH3X7M5Y*MTY2MjgxODQ5MC4xLjAuMTY2MjgxOTE4Ny4wLjAuMA..&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.gitlab.com/t/cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted/60918/2?_gl=1&#34;&gt;https://forum.gitlab.com/t/cve-2021-22205-how-to-determine-if-a-self-managed-instance-has-been-impacted/60918/2?_gl=1&lt;/a&gt;&lt;em&gt;1y48o1u&lt;/em&gt;_ga&lt;em&gt;ODE5OTE4NTMuMTY2MjgxODQ3OQ..&lt;/em&gt;_ga_ENFH3X7M5Y*MTY2MjgxODQ5MC4xLjAuMTY2MjgxOTE4Ny4wLjAuMA..&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/&#34;&gt;https://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hackerone.com/vakzz?type=user&#34;&gt;https://hackerone.com/vakzz?type=user&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22205&#34;&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22205&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
