<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Overstarry Site - Linux</title>
    <subtitle>overstarry site</subtitle>
    <link rel="self" type="application/atom+xml" href="https://jasminides.com/tags/linux/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://jasminides.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-03-02T17:32:25+08:00</updated>
    <id>https://jasminides.com/tags/linux/atom.xml</id>
    <entry xml:lang="en">
        <title>atop工具介绍及使用</title>
        <published>2024-03-02T17:32:25+08:00</published>
        <updated>2024-03-02T17:32:25+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/atop/"/>
        <id>https://jasminides.com/posts/atop/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/atop/">&lt;h2 id=&quot;qian-yan&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#qian-yan&quot; aria-label=&quot;Anchor link for: qian-yan&quot;&gt;#&lt;&#x2F;a&gt;前言&lt;&#x2F;h2&gt;
&lt;p&gt;最近出现了服务器cpu、内存升高导致服务器宕机的问题，发生宕机后，往往由于对系统资源数据收集的不齐全，导致无法快速查明发生宕机的原因。在通过云厂商客服和网络相关资料帮助下，了解了 atop 这个工具，本机对 atop 的安装及使用进行介绍。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;atop-jie-shao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#atop-jie-shao&quot; aria-label=&quot;Anchor link for: atop-jie-shao&quot;&gt;#&lt;&#x2F;a&gt;atop 介绍&lt;&#x2F;h2&gt;
&lt;p&gt;atop 是一款用于监控 Linux 系统资源与进程的工具，能够报告所有进程的活动。其以一定的频率记录系统和进程活动，采集的数据包含 CPU、内存、磁盘、网络的资源使用情况和进程运行情况，并能以日志文件的方式保存在磁盘中。对于每个进程，会显示CPU使用率、内存增长、磁盘使用率、优先级、用户名、状态和退出码等。当服务器出现问题后，可以根据相应的atop日志文件进行分析。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-zhuang&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#an-zhuang&quot; aria-label=&quot;Anchor link for: an-zhuang&quot;&gt;#&lt;&#x2F;a&gt;安装&lt;&#x2F;h2&gt;
&lt;p&gt;atop 不是系统的内部自带命令，需要进行安装，接下来以 Ubuntu 系统为例子，介绍如何安装 atop 命令。&lt;&#x2F;p&gt;
&lt;p&gt;1 更新软件源&lt;&#x2F;p&gt;
&lt;p&gt;执行 &lt;code&gt;sudo apt  update&lt;&#x2F;code&gt; 进行软件源的更新。&lt;&#x2F;p&gt;
&lt;p&gt;2 安装 atop&lt;&#x2F;p&gt;
&lt;p&gt;执行 &lt;code&gt;sudo apt install atop&lt;&#x2F;code&gt; 命令安装 atop。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;atop&#x2F;img.png&quot; alt=&quot;img.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pei-zhi&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pei-zhi&quot; aria-label=&quot;Anchor link for: pei-zhi&quot;&gt;#&lt;&#x2F;a&gt;配置&lt;&#x2F;h2&gt;
&lt;p&gt;安装完 atop 后，可以使用 atop 的默认配置使用，也可根据使用情况修改默认配置，atop 默认配置在 &lt;code&gt;&#x2F;etc&#x2F;sysconfig&#x2F;atop&lt;&#x2F;code&gt;,查看默认配置文件内容:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; class=&quot;language-text z-code&quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# &#x2F;etc&#x2F;default&#x2F;atop
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# see man atoprc for more possibilities to configure atop execution
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LOGOPTS=&amp;quot;-R&amp;quot;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LOGINTERVAL=600
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LOGGENERATIONS=28
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;LOGPATH=&#x2F;var&#x2F;log&#x2F;atop
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;LOGINTERVAL 是监控周期，默认600s，LOGGENERATIONS是日志文件保留周期，默认是28天，可以根据具体的需求进行修改。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#shi-yong&quot; aria-label=&quot;Anchor link for: shi-yong&quot;&gt;#&lt;&#x2F;a&gt;使用&lt;&#x2F;h2&gt;
&lt;p&gt;命令行输入 &lt;code&gt;atop&lt;&#x2F;code&gt; 命令即可使用，可以看到分为2块，上部是系统资源的使用情况，下部是没个进程的使用情况。
&lt;img src=&quot;&#x2F;img&#x2F;atop&#x2F;img_1.png&quot; alt=&quot;img_1.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果想看内存的使用情况，可以添加 &lt;code&gt;-m&lt;&#x2F;code&gt; 参数或者在 atop 命令输入 m&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;atop&#x2F;img_2.png&quot; alt=&quot;img_2.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果想看磁盘的情况可以输入 d,输入 c 可以查看各个进程的cpu使用情况。&lt;&#x2F;p&gt;
&lt;p&gt;atop 还有其它命令参数，具体可以执行 &lt;code&gt;atop -h&lt;&#x2F;code&gt; 查看。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fen-xi-ri-zhi&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fen-xi-ri-zhi&quot; aria-label=&quot;Anchor link for: fen-xi-ri-zhi&quot;&gt;#&lt;&#x2F;a&gt;分析日志&lt;&#x2F;h2&gt;
&lt;p&gt;系统出现问题时，往往无法实时的查看系统资源的情况，这时我们可以通过 atop 的日志文件进行针对分析，atop 的日志文件存放在 &lt;code&gt;&#x2F;var&#x2F;log&#x2F;atop&lt;&#x2F;code&gt; 路径下，
可以使用 &lt;code&gt;atop -r &#x2F;var&#x2F;log&#x2F;atop&#x2F;atop_xx &lt;&#x2F;code&gt; 命令进行查看分析，执行命令后同样进入相应的界面，但此界面不会实时更新数据，我们可以使用相应的命令进行 cpu 内存 磁盘等资源的分析。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;atop&#x2F;img_3.png&quot; alt=&quot;img_3.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiao-jie&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#xiao-jie&quot; aria-label=&quot;Anchor link for: xiao-jie&quot;&gt;#&lt;&#x2F;a&gt;小结&lt;&#x2F;h2&gt;
&lt;p&gt;本文介绍了 linux 上一个常用的系统资源进程监控工具，通过此工具可以分析系统资源和进程的使用情况，并且可以针对不同时间点进行分析研究。
atop 是一个复杂的工具，需要我们持续学习使用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;#&lt;&#x2F;a&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.lyyyuna.com&#x2F;2018&#x2F;07&#x2F;04&#x2F;perftest-atop&#x2F;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kswapd0 is consuming a lot of CPU.</title>
        <published>2022-04-09T16:17:19+08:00</published>
        <updated>2022-04-09T16:17:19+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/kswapd0-consumes-a-lot-of-cpu/"/>
        <id>https://jasminides.com/posts/kswapd0-consumes-a-lot-of-cpu/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/kswapd0-consumes-a-lot-of-cpu/">&lt;h2 id=&quot;issue&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#issue&quot; aria-label=&quot;Anchor link for: issue&quot;&gt;#&lt;&#x2F;a&gt;Issue&lt;&#x2F;h2&gt;
&lt;p&gt;Recently, a Linux server has been experiencing high CPU usage, causing the server to become unresponsive and other processes to fail to execute smoothly. By using the top command to check resource usage, it can be seen that the kswapd0 process is consuming a large amount of CPU resources.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;kswapd0&#x2F;img_2.png&quot; alt=&quot;top命令结果&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cause-and-solution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#cause-and-solution&quot; aria-label=&quot;Anchor link for: cause-and-solution&quot;&gt;#&lt;&#x2F;a&gt;Cause and solution&lt;&#x2F;h2&gt;
&lt;p&gt;Based on my research, the kswapd0 process is responsible for managing virtual memory.&lt;&#x2F;p&gt;
&lt;p&gt;Typically, a Linux system comprises RAM, swap, and EXT4 components. The EXT4 partition is used to store regular files and can be created on either an HDD or an SSD, though it is relatively slower compared to RAM. RAM, commonly referred to as memory, is used for high-speed program execution. The swap partition, on the other hand, is used as additional virtual memory and is normally allocated on physical disks, especially on machines with limited physical RAM.&lt;&#x2F;p&gt;
&lt;p&gt;The swap partition acts as virtual RAM, generally located on HDD&#x2F;SSD. When physical memory is limited, the system might frequently face memory shortages, causing it to use the swap partition to temporarily store data from the physical memory. When available physical memory is low, the kswapd0 process moves less frequently used programs to the swap partition, which can result in these programs becoming unresponsive. For instance, if a machine has 4 GB of RAM and needs to run a program requiring 5 GB of memory, at least 1 GB will be placed in the swap partition. The process of moving memory handled by kswapd0 can lead to significant CPU usage. To address this issue, there are several solutions:&lt;&#x2F;p&gt;
&lt;p&gt;1 modify &#x2F;etc&#x2F;sysctl.conf file&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;echo vm.swappiness=0 | sudo tee -a &#x2F;etc&#x2F;sysctl.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here, 0 represents the percentage of remaining physical memory. The value ranges from 0 to 100, and setting it to 0 means that kswapd0 will only execute when there is no physical memory available.&lt;&#x2F;p&gt;
&lt;p&gt;2 Close some unused programs.&lt;&#x2F;p&gt;
&lt;p&gt;3 Add more memory.&lt;&#x2F;p&gt;
&lt;p&gt;4 Increase the swap partition.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#summary&quot; aria-label=&quot;Anchor link for: summary&quot;&gt;#&lt;&#x2F;a&gt;Summary&lt;&#x2F;h2&gt;
&lt;p&gt;This article primarily discusses the issue I encountered with kswapd0 using excessive CPU resources and how to resolve this problem.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;#&lt;&#x2F;a&gt;References&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wqbin&#x2F;p&#x2F;12095703.html&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kswapd0消耗大量cpu</title>
        <published>2022-04-09T16:17:19+08:00</published>
        <updated>2022-04-09T16:17:19+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/kswapd0xiao-hao-da-liang-cpu/"/>
        <id>https://jasminides.com/posts/kswapd0xiao-hao-da-liang-cpu/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/kswapd0xiao-hao-da-liang-cpu/">&lt;h2 id=&quot;wen-ti&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#wen-ti&quot; aria-label=&quot;Anchor link for: wen-ti&quot;&gt;#&lt;&#x2F;a&gt;问题&lt;&#x2F;h2&gt;
&lt;p&gt;最近一台 Linux 服务器经常出现 cpu 过高，导致服务器卡顿，其他进程不能顺利进行。通过 top 命令查看资源的占用情况，可以看到 Kswapd0 进程 消耗了大量的 cpu 资源。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;img&#x2F;kswapd0&#x2F;img_2.png&quot; alt=&quot;top命令结果&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yuan-yin-ji-jie-jue&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#yuan-yin-ji-jie-jue&quot; aria-label=&quot;Anchor link for: yuan-yin-ji-jie-jue&quot;&gt;#&lt;&#x2F;a&gt;原因及解决&lt;&#x2F;h2&gt;
&lt;p&gt;通过搜索得知，Kswapd0 进程是用来管理虚拟内存的。&lt;&#x2F;p&gt;
&lt;p&gt;一般的 Linux 都会有 RAM，swap, 和 EXT4 这几个部分，EXT4 分区就是用来存放一般的文件，可以在机械硬盘或者 SSD 上划分出 ext4 分区来保存文件，相对 RAM（内存）来说要稍微慢一些，RAM 就是日常所说的内存，用来做程序运行时的高速缓存，而 SWAP 是交换分区，一般在物理内存比较小的机器上会划分一块物理磁盘来作为 swap 分区。&lt;&#x2F;p&gt;
&lt;p&gt;swap 分区是一款虚拟的 RAM，一般在 HDD&#x2F;SSD 上，当物理内存比较小的时侯，可能经常缺内存，那么系统就会使用 swap 分区，将物理内存中的内容搬迁到 swap 分区中暂存。当可用物理内存比较小的时候，kswapd0 进程就会将相对比较不常用的程序移动到 swap 分区中，这个时候就可能造成这些程序比较卡顿。例如一台机器的内存是 4G，而要运行一个需要 5G 内存的程序，那么至少有 1G 的内存会放到 swap 分区中。kswapd0 移动内存的过程就会造成 CPU 的大量使用。要解决这个问题有这样几个方式。&lt;&#x2F;p&gt;
&lt;p&gt;1 修改 &#x2F;etc&#x2F;sysctl.conf 文件&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;echo vm.swappiness=0 | sudo tee -a &#x2F;etc&#x2F;sysctl.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这里 0 表示物理内存还剩余的百分比，这个值的取值范围是 0-100，配置 0 也就意味着只有当没有物理内存可用时再执行 kswapd0.&lt;&#x2F;p&gt;
&lt;p&gt;2 关闭一些不使用的程序&lt;&#x2F;p&gt;
&lt;p&gt;3 增加内存&lt;&#x2F;p&gt;
&lt;p&gt;4 增加 swap 分区&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiao-jie&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#xiao-jie&quot; aria-label=&quot;Anchor link for: xiao-jie&quot;&gt;#&lt;&#x2F;a&gt;小结&lt;&#x2F;h2&gt;
&lt;p&gt;本文主要是介绍我遇到的 kswapd0 使用 cpu 资源过高的问题，以及如何解决这个问题。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;#&lt;&#x2F;a&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wqbin&#x2F;p&#x2F;12095703.html&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Fsck</title>
        <published>2022-02-19T21:57:10+08:00</published>
        <updated>2022-02-19T21:57:10+08:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://jasminides.com/posts/fsck/"/>
        <id>https://jasminides.com/posts/fsck/</id>
        
        <content type="html" xml:base="https://jasminides.com/posts/fsck/">&lt;h2 id=&quot;qi-yin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#qi-yin&quot; aria-label=&quot;Anchor link for: qi-yin&quot;&gt;#&lt;&#x2F;a&gt;起因&lt;&#x2F;h2&gt;
&lt;p&gt;在一次使用虚拟机的时候，发现 Linux 系统进入了 Initramfs，无法正常进入系统, 推测可能是系统异常关机导致磁盘文件损坏导致的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jie-jue&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jie-jue&quot; aria-label=&quot;Anchor link for: jie-jue&quot;&gt;#&lt;&#x2F;a&gt;解决&lt;&#x2F;h2&gt;
&lt;p&gt;网上搜寻了一些解决方法，普遍的推荐方法是使用 Linux 命令 fsck 命令来修复磁盘文件。&lt;&#x2F;p&gt;
&lt;p&gt;费了好大劲进入另一个系统使用 fsck.ext4 -f &#x2F;dev&#x2F;sda1 来检查修复磁盘文件(我所使用的linux 系统磁盘是ext4格式的)。&lt;&#x2F;p&gt;
&lt;p&gt;接下来我来介绍下 fsck 的使用。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fsck&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fsck&quot; aria-label=&quot;Anchor link for: fsck&quot;&gt;#&lt;&#x2F;a&gt;fsck&lt;&#x2F;h3&gt;
&lt;p&gt;fsck（file system consistency check）是Unix和类Unix系统上用于检查文件系统完整性的工具.&lt;&#x2F;p&gt;
&lt;p&gt;语法: fsck [选项]  [文件系统]&lt;&#x2F;p&gt;
&lt;p&gt;常见参数：&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; -f          强制检查文件系统，不管是否有损坏
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; -p          自动修复文件系统错误
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; -q          做一个快速检查，以确定文件系统是否被干净地卸载。
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; -y          关闭互动模式，询问全部选择 y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-kao&quot; aria-label=&quot;Anchor link for: can-kao&quot;&gt;#&lt;&#x2F;a&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20150529001726&#x2F;http:&#x2F;&#x2F;www.manpagez.com&#x2F;man&#x2F;8&#x2F;fsck&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;zh-hans&#x2F;Fsck&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;wiki&#x2F;Unix%E5%AE%9E%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%88%97%E8%A1%A8&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
