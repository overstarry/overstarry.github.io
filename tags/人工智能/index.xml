<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>人工智能 on Overstarry Site</title>
    <link>https://jasminides.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
    <description>Recent content in 人工智能 on Overstarry Site</description>
    <image>
      <title>Overstarry Site</title>
      <url>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.9</generator>
    <language>zh</language>
    <copyright>Copyright © 2024 - overstarry · All rights reserved </copyright>
    <lastBuildDate>Mon, 28 Apr 2025 20:29:54 +0800</lastBuildDate>
    <atom:link href="https://jasminides.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dify 学习 - 安装和初探</title>
      <link>https://jasminides.com/posts/dify-learn-1/</link>
      <pubDate>Mon, 28 Apr 2025 20:29:54 +0800</pubDate>
      <guid>https://jasminides.com/posts/dify-learn-1/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;Dify 是一个开源的 LLM 应用开发平台。其直观的界面结合了 AI 工作流、RAG 管道、Agent、模型管理、可观测性功能等，让您可以快速从原型到生产。本篇将介绍如何安装和初步使用 Dify，接下来还会有多篇介绍 Dify 的文章，敬请期待。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;接下来介绍如何使用 Docker 安装 Dify。&lt;/p&gt;
&lt;h3 id=&#34;安装-docker&#34;&gt;安装 Docker&lt;/h3&gt;
&lt;p&gt;在各个操作系统上安装 Docker，可以参考 Docker 官方文档，这里就不进行叙述了。&lt;/p&gt;
&lt;h3 id=&#34;clone-dify-仓库&#34;&gt;Clone Dify 仓库&lt;/h3&gt;
&lt;p&gt;使用命令 &lt;code&gt;git clone https://github.com/langgenius/dify.git&lt;/code&gt; 克隆 Dify 仓库。&lt;/p&gt;
&lt;h3 id=&#34;启动-dify&#34;&gt;启动 Dify&lt;/h3&gt;
&lt;p&gt;进入 Docker 目录，拷贝一份环境变量配置文件,使用 &lt;code&gt;docker compose up -d&lt;/code&gt; 命令启动 Dify。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd dify/docker
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp .env.example .env
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;过一会儿，使用 &lt;code&gt;docker compose ps&lt;/code&gt; 命令查看容器状态，确保所有容器都正常运行。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/dify1/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;设置管理员账号&#34;&gt;设置管理员账号&lt;/h3&gt;
&lt;p&gt;访问 &lt;code&gt;http://localhost/install&lt;/code&gt; 设置管理员账号,设置完成之后，访问 &lt;code&gt;http://localhost/signin&lt;/code&gt; 即可登录。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/dify1/image-1.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 gpt 改造你的小米音箱</title>
      <link>https://jasminides.com/posts/mi_gpt/</link>
      <pubDate>Mon, 27 Jan 2025 14:19:32 +0800</pubDate>
      <guid>https://jasminides.com/posts/mi_gpt/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;前段时间看到了一个项目 &lt;code&gt;mi-gpt&lt;/code&gt; ,可以将你的小爱音箱接入 gpt，改造成专属于你的语音助手。&lt;/p&gt;
&lt;p&gt;接下来就由作者来介绍小爱同学从零接入 deepseek 的过程。&lt;/p&gt;
&lt;h2 id=&#34;设置环境变量和配置文件&#34;&gt;设置环境变量和配置文件&lt;/h2&gt;
&lt;p&gt;mi-gpt 有两种部署方式，一是使用 docker 部署，二是使用 Node.js 进行部署，本文使用 docker 进行部署使用。&lt;/p&gt;
&lt;p&gt;需要提供两个文件 .env 和 .migpt.js 文件，.migpt.js 是配置文件，包括一些配置，.env 是环境变量文件，存放 gpt 密钥相关文件。文件的例子可以从仓库里复制，然后进行相应的修改。&lt;/p&gt;
&lt;h2 id=&#34;启动&#34;&gt;启动&lt;/h2&gt;
&lt;p&gt;使用以下命令启动 docker:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d --env-file $(pwd)/.env -v $(pwd)/.migpt.js:/app/.migpt.js idootop/mi-gpt:latest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;windows 环境下需要将$(pwd) 替换为绝对路径。&lt;/p&gt;
&lt;p&gt;启动后可以通过 callAIKeywords 设置的关键字调用 ai 来响应用户的消息。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/mi-gpt/image.png&#34; alt=&#34;alt text&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;本文介绍了使用 mi-gpt 升级你的闲置的小爱音箱，通过简单的测试和使用，个人感觉还不够完善，稳定性不够好，感兴趣的读者可以根据本文的内容进行自行搭建尝试。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/idootop/mi-gpt&#34;&gt;https://github.com/idootop/mi-gpt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>AI 绘画初体验</title>
      <link>https://jasminides.com/posts/ai%E7%BB%98%E7%94%BB%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sat, 15 Oct 2022 22:19:32 +0800</pubDate>
      <guid>https://jasminides.com/posts/ai%E7%BB%98%E7%94%BB%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近我发现各个群里出现了一股利用 AI 进行绘画的潮流，今天我也尝试使用 Stable Diffusion 模型 进行 AI 绘画。&lt;/p&gt;
&lt;h2 id=&#34;stable-diffusion-简介&#34;&gt;Stable Diffusion 简介&lt;/h2&gt;
&lt;p&gt;Stable Diffusion 是一个文本到图像的模型，将使人们可以在几秒钟内创造出令人惊叹的艺术作品。它在速度和质量方面都有突破，这意味着它可以在消费级 GPU 上运行&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;
&lt;p&gt;我们采用别人封装的 stable-diffusion-webui 平台进行绘画，由于各种条件限制，我们使用 github 上提供的 Google colab notbook 进行部署 (&lt;a href=&#34;https://colab.research.google.com/drive/1IplUv47g9CgtlJmFnyT2sDyNYDEeMJDi?usp=sharing)&#34;&gt;https://colab.research.google.com/drive/1IplUv47g9CgtlJmFnyT2sDyNYDEeMJDi?usp=sharing)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;打开链接，我简单的看了下代码，前面是基础的安装运行环境、需要的 Python package .我们依次运行即可。&lt;/p&gt;
&lt;p&gt;我们直接来到 1.4 Connect to Google Drive，
&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/ai%e7%bb%98%e7%94%bb/img.png&#34; alt=&#34;img.png&#34;  /&gt;

勾选 download_if_missing，然后到  &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;https://huggingface.co/settings/tokens&lt;/a&gt;  复制你的 toekn 并填入。(huggingface 注册耗费了许多时间，reCAPTCHA 没有通过).&lt;/p&gt;
&lt;p&gt;点击运行后就开始拉取模型。&lt;/p&gt;
&lt;p&gt;如果运行发现报错了：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;remote: Access to model CompVis/stable-diffusion-v-1-4-original is restricted and you are not in the authorized list. Visit https://huggingface.co/CompVis/stable-diffusion-v-1-4-original to ask for access.
fatal: unable to access &amp;#39;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/&amp;#39;: The requested URL returned error: 403
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你需要到 &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&#34;&gt;https://huggingface.co/CompVis/stable-diffusion-v-1-4-original&lt;/a&gt; 授权模型的访问权限。授权后重新运行即可。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
