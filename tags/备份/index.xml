<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>备份 on Overstarry Site</title>
    <link>https://jasminides.com/tags/%E5%A4%87%E4%BB%BD/</link>
    <description>Recent content in 备份 on Overstarry Site</description>
    <image>
      <title>Overstarry Site</title>
      <url>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jasminides.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>zh</language>
    <copyright>Copyright © 2024 - overstarry · All rights reserved </copyright>
    <lastBuildDate>Sat, 18 Mar 2023 23:17:24 +0800</lastBuildDate>
    <atom:link href="https://jasminides.com/tags/%E5%A4%87%E4%BB%BD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>apisix 数据备份</title>
      <link>https://jasminides.com/posts/apisix%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Sat, 18 Mar 2023 23:17:24 +0800</pubDate>
      <guid>https://jasminides.com/posts/apisix%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</guid>
      <description>&lt;p&gt;今天我来讲讲如何备份 apisix 的数据，主要是路由、服务、上游等数据。本文中的 apisix 版本为 apisix 3.1.0 版本。&lt;/p&gt;
&lt;p&gt;接下来由我来介绍几种备份方法。&lt;/p&gt;
&lt;h2 id=&#34;dashboard-导出备份&#34;&gt;dashboard 导出备份&lt;/h2&gt;
&lt;p&gt;介绍的第一种方法是使用 apisix dashboard 进行数据导出，但这种方法有许多缺陷，只能导出 route 数据，其他服务、ssl 数据都不能导出，而且新版本 (3.0+)dashboard 导出的路由不包含上游服务的数据，不方便进行快速的路由迁移复制 (我猜测可能是害怕上游服务信息不一致导致路由错误)。&lt;/p&gt;
&lt;p&gt;接下来就来介绍如何进行导入导出。&lt;/p&gt;
&lt;p&gt;1 我们打开 dashboard&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/apisix%e5%a4%87%e4%bb%bd/img.png&#34; alt=&#34;img.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;2 选择要导出的路由，点击 export openapi&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/apisix%e5%a4%87%e4%bb%bd/img_1.png&#34; alt=&#34;img_1.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;3 在新的 apisix dashboard 导入刚刚导出的 openapi 文件并填写相应的信息，导入成功后就可以看到导入的路由信息，相应路由的服务需要补充填写。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/apisix%e5%a4%87%e4%bb%bd/img_2.png&#34; alt=&#34;img_2.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jasminides.com/img/apisix%e5%a4%87%e4%bb%bd/img_3.png&#34; alt=&#34;img_3.png&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;根据-admin-api-编写相应的脚本&#34;&gt;根据 admin api 编写相应的脚本&lt;/h2&gt;
&lt;p&gt;apisix 提供了各种 route、service 的 admin api 数据接口，我们可以根据官方提供的接口编写相应的脚本。&lt;/p&gt;
&lt;h2 id=&#34;使用-etcd-备份方案&#34;&gt;使用 etcd 备份方案&lt;/h2&gt;
&lt;p&gt;由于 apisix 默认采用 etcd 进行数据存储，我们可以备份 etcd 数据，到新的 apisix 集群导入备份的数据。&lt;/p&gt;
&lt;p&gt;由于我对 etcd 的运维不太熟悉，想要了解 etcd 备份快照，可以查看这条&lt;a href=&#34;https://etcd.io/docs/v3.5/op-guide/recovery/&#34;&gt;链接&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
